schema: "./schema.graphql"
documents: "lib/graphql/**/*.graphql"
generates:
  lib/generated/types.ts:
    plugins:
      - typescript
    config:
      strict: true
      strictScalars: true
      enumsAsTypes: true
      useTypeImports: true
      scalars:
        # Core GraphQL and built-in scalar types
        ID: string
        String: string
        Boolean: boolean
        Int: number
        Float: number

        # Common custom scalar types
        DateTime: string
        Date: string
        date: string
        JSON: { [key: string]: any }

        # Project-specific scalar types
        _Any: any
        bpchar: string
        uuid: any
        timestamptz: any
        jsonb: any
        numeric: number
        timestamp: any

        # Enum-like scalar types mapped to project enums
        leave_status_enum: 'import("../graphql/enums").LeaveStatusEnum'
        payroll_cycle_type: 'import("../graphql/enums").PayrollCycleEnum'
        payroll_date_type: 'import("../graphql/enums").PayrollDateTypeEnum'
        payroll_status: 'import("../graphql/enums").PayrollStatusEnum'
        user_role: 'import("../graphql/enums").UserRoleEnum'

  lib/graphql/:
    preset: near-operation-file
    presetConfig:
      extension: .ts
      baseTypesPath: ../generated
      folder: ""
    plugins:
      - typescript-operations
      - typescript-react-apollo
    config:
      withHooks: true
      withHOC: false
      withComponent: false
      useTypeImports: true
      enumsAsTypes: true
      documentMode: "documentNode"
      fragmentImports: true
      documentVariableSuffix: ""
      fragmentVariableSuffix: ""
      namingConvention:
        typeNames: change-case-all#pascalCase
        enumValues: change-case-all#upperCase
        transformUnderscore: true
      # Fixed suffix handling for all operation types
      querySuffix: "Query"
      mutationSuffix: "Mutation"
      subscriptionSuffix: "Subscription"
      dedupeOperationSuffix: true  # Added to prevent double suffixes
      dedupeFragments: true
      exportFragmentSpreadSubTypes: true
      skipTypename: false
      addDocBlocks: true

hooks:
  afterAllFileWrite:
    - prettier --write
    - eslint --fix
    - echo "Code generation completed!"
